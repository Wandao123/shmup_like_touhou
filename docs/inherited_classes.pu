@startuml SpriteAnimator
abstract SpriteAnimator {
    -spriteRenderer
    #{abstract} clipFromImage(countedFrames: int)
    #Update()
}

class BulletAnimator {
    -clip: Sprite
    #clipFromImage(countedFrames: int)
}

class NormalEnemyAnimator {
    -clips: Sprite[]
    #clipFromImage(countedFrames: int)
}

class BossEnemyAnimator {
    -clips: Sprite[]
    #clipFromImage(countedFrames: int)
}

class PlayerCharacterAnimator {
    -clips: Sprite[,]
    #clipFromImage(countedFrames: int)
}

class PlayerOptionAnimator {
    -clip: Sprite
    #clipFromImage(countedFrames: int)
}

SpriteAnimator <|-- BulletAnimator
SpriteAnimator <|-- NormalEnemyAnimator
SpriteAnimator <|-- BossEnemyAnimator
SpriteAnimator <|-- PlayerCharacterAnimator
SpriteAnimator <|-- PlayerOptionAnimator
@enduml

@startuml WrapperClass
class Activity {
    +Erase()
    +IsEnabled(): bool
    +Spawned()
}

abstract CollisionHandler {
    -damage: int
    -hitPoint: int
    +GetDamage(): int
    +GetHitPoint(): int
    +SetHitPoint(hitPoint: int)
    #{abstract} OnTriggerEnter2D(other)
}

class BulletCollisionHandler {
    #OnTriggerEnter2D(other)
}

class EnemyCollisionHandler {
    #OnTriggerEnter2D(other)
}

class PlayerCollisionHandler {
    #OnTriggerEnter2D(other)
}

BulletCollisionHandler --|> CollisionHandler
EnemyCollisionHandler --|> CollisionHandler
PlayerCollisionHandler --|> CollisionHandler

abstract MoverController {
    -angle: float
    -speed: float
    -rigidBody2D
    +GetPosition(): Vector2
    +SetPosition(position: Vector2)
    +GetAngle(): float
    +SetAngle(angle: float)
    +GetSpeed(): float
    +SetSpeed(speed: float)
    #{abstract} FixedUpdate()
}

class PlayerCharacterController {
    #FixedUpdate()
}

class PlayerOptionController {
    #FixedUpdate()
}

PlayerController <|-- PlayerOptionController
PlayerController <|-- PlayerCharacterController

class BulletController {
    #FixedUpdate()
}

class EnemyController {
    #FixedUpdate()
}

class PlayerController {
    #FixedUpdate()
}

MoverController <|-- BulletController
MoverController <|-- EnemyController
MoverController <|-- PlayerController

abstract Mover {
    +Erase()
    +IsEnabled(): bool
    +GetDamage(): int
    +GetHitPoint(): int
    +SetHitPoint(hitPoint: int)
    +GetPosition(): Vector2
    +SetPosition(position: Vector2)
    +GetAngle(): float
    +SetAngle(angle: float)
    +GetSpeed(): float
    +SetSpeed(speed: float)
}
note right of Mover
    Wrapper class
end note

Mover "1" o-- "1" MoverController : Delegate
Activity "1" --o "1" Mover : Delegate
CollisionHandler "1" --o "1" Mover : Delegate
@enduml